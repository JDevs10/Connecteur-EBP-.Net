<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEACADgDwAAFgAAACgAAAAyAAAAZAAAAAEACAAAAAAAKAoAAAAAAAAAAAAAAAEAAAAB
        AABySQAAkm40AHRKAABySAAAdUsAAHRLAABvRQAA+/n3AHxVDQBwRQAA7+rhAMm5nQDh2MgAlHI5AHNK
        AABtQgAAb0QAAG1BAABuQgAAcUcAAG5DAABwRgAAbEAAAJNxOQBzSQAAnn9MAPby7QDu6N8A+PXxAPbz
        7gD18u0A9fHsAO7o4AB/WRQAb0MAAPbz7wBxRgAAnoBMAHhQBgB7VAsAckcAAGs/AAByRwIAbkQAAPz6
        +QCaekYA//7+AI1nKgDq4tgA39TEAHRMAADt6N4AmXdCAPn39QBxRgEAcEcAAMa0lwDs5doA6+TaAHtU
        FACPbTMA6uPYAO/q4gD+/f0Af1gXAObd0gCNay8A4tfIAKCCUACVcjkAk3I7AP7+/gCfgk8AdEsEAM6/
        pQDKup8Ann9LAJJtMwCcfEYAmnxEANjMtgDl3M4AyrmdAKmNXwCdfUgAd08MAPHs5QCymnMAlHI7ALyn
        ggDi2ckApIdYAH5YEQDbzrsAoIRTAPj18gCvl2wAelMKAIpmJwBqPgAAr5ZsAHNHAACScTQAm3xFAI5r
        LwBqPQAAn4BNAJ5+SwCOazEAfFUMAOPaywBsPwAA29C+AMCsigC1nngAcEQAAI1rMACKZyoAq5BjAJJw
        OAD39PAAlXQ7AHVNAAD6+PUA1sq1AIpnKACVczoAhF0eAIFaGgCUcTgAjWgvAJNyOQCScDUAr5VsANHC
        qQDi2soAnX5IAHxUEADs5t0A+ff0ANzRwAC0mnQA1cmyANLErQDq49kAxLOYAHdOAwCPbDIA8e3lAO7p
        4AD9/fwA/fz8ANzQvQB+VxQA9fHtAJV1OwCObC0Av6qHAPLt5gDYzLgAvaiGAH9XFgDCrowAe1MKAHxV
        FADy7ucAy7qfALGYbwByRwEA9fLsAHdPAwDQwqgAuqR+AGc7AADXy7cAimcnAI1qLQDKuZ4AoIJPALSc
        dgCef0oA8OvjAOzl2wCegEsAzL2jAPLt5wC0nHUAe1QNALCXbQCAWhQA////AHVMAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAr729vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29O7wAAAi/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwAvAAC9v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v7+/v7+/v7+/AAMDAwMFv7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/v7+/EyYnoydcYQW/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwAB
        AAC9v7+/v7+/v7+/v7+/v78FEnlulTOUQ7ATv7+/v7+/v7+/v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/
        v7+/v7+/v7+/Ehcbvr6+HGo3BL+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v78E
        D1gbvr6+uTQRBb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v78yEXcgvr6+pS0P
        Bb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v78FFoMgvr6+MBetKwYGBgYGBgYG
        BgYGBgYGBhATv7+/v7+/v7+/AAEAAL2/v7+/v7+/v78FDy0+vr6+NY2CgUUNDQ0NDQ0NDQ0NDQ0NDQ1+
        Yg6/v7+/v7+/vwABAAC9v7+/v7+/v7+/Kl6avr6+vpd4ewcHBwcHBwcHBwcHBwcHBwcHB6sQv7+/v7+/
        v78AAQAAvb+/v7+/v7+/CXVfvr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6OEL+/v7+/v7+/AAEAAL2/
        v7+/v7+/vw5Vor6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+UBC/v7+/v7+/vwABAAC9v7+/v7+/v7+/
        AySdvr6+vpaPkVILCwsLCwsLCwsLCwsLCwsLuGATv7+/v7+/v78AAQAAvb+/v7+/v7+/v78DNnG+vr6+
        pmVjFQkJCQkJCQkJCQkJCQkJCRUDv7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/vwOoWS6+vr6GoSu/BAQE
        BAQEBAQEBAQEBAQEv7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v7+/Awm6R76+vl1AFL+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v7+/v78YEFc/vr6+mIAGv7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/vwAQsyy+vr4xfwO/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwAB
        AAC9v7+/v7+/v7+/v7+/v7+/GChIp4VkcoQDvwQEBAQEv7+/v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/
        v7+/v7+/v7+/v78FEBQUFBQOv3oDBgYGBhW/v7+/v7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/vw6JoEoLsUtOEgW/v7+/v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/KkSLvr6+H7QPBb+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v78PFzq+
        vr4aTA8Fv7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vxY8ir6+vh8ZDwW/
        v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/BAICAgICAgICAgICAgICAgIOKUI9vr6+GhkRBb+/v7+/v7+/
        v78AAQAAvb+/v7+/v7+/v78CAgICAgICAgICAgICAgICAg4pdDC+vr6pGREFv7+/v7+/v7+/AAEAAL2/
        v7+/v7+/vxBmh1oMDAwMDAwMDAwMDAwMDAwMDIxWvr6+vh1rEr+/v7+/v7+/vwABAAC9v7+/v7+/v78S
        Z76+vr6+vr6+vr6+vr6+vr6+vr6+vr6+vr6+HLIJv7+/v7+/v78AAQAAvb+/v7+/v7+/Ek++vr6+vr6+
        vr6+vr6+vr6+vr6+vr6+vr6+vi5TBr+/v7+/v7+/AAEAAL2/v7+/v7+/vyKbtQoKCgoKCgoKCgoKCgoK
        CgoKCpAevr6+vix2cwW/v7+/v7+/vwABAAC9v7+/v7+/v78EkggICAgICAgICAgICAgICAgIbUlsQb6+
        vh5bIg6/v7+/v7+/v78AAQAAvb+/v7+/v7+/vwUoAwMDAwMDAwMDAwMDAwMDA2l9Ub6+vh0lbwK/v7+/
        v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vxFotr6+vhq3FgW/v7+/v7+/v7+/vwAB
        AAC9v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vw+TOb6+viNUEQW/v7+/v7+/v7+/v78AAQAAvb+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/vyRGnr6+viMlEQW/v7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/vxiZOHCun3yIDwW/v7+/v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/qiYFBQUFEwS/v7+/v7+/v7+/v7+/v78AAQAAvb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v78CDg4O
        Ar+/v7+/v7+/v7+/v7+/v7+/AAEAAL2/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/
        v78AAQAAvb+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/AAEAAL2/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/vwABAAC9v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v78ATQAAu7+/v7+/v7+/v7+/v7+/v7+/
        v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/AC8AAJwhvb29vb29vb29vb29vb29vb29vb29vb29
        vb29vb29vb29vb29vb29vb29vb29IaSsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>